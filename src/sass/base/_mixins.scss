@mixin clearfix {
  &:after,
  &:before {
    content: "";
    display: table;
  }

  &:after {
    clear: both;
  }
}
@mixin ls($param){
  letter-spacing: ($param/1000) * 1em;
}
@mixin container() {
  max-width: $maxwidth-container + ($padding-container * 2) + px;
  min-width: 320px;
  margin: 0 auto;
  padding: {
    right: $padding-container + px;
    left: $padding-container + px;
  }
}
@mixin fz($px) {
  $maxwidth: ($maxwidth-container * 0.01) * 1px;
  font-size: $px;
  font-size: ($px / $maxwidth) * 1vw;
}
@mixin border-radius($radius: 5px) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
}
@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}
@mixin opacity($opacity: 1) {
  $ieOpacity: $opacity * 100;
  filter:  "alpha(opacity=$ieOpacity)";
  -ms-filter:  "progid:DXImageTransform.Microsoft.Alpha(Opacity=$ieOpacity)";
  opacity: $opacity;
}
@mixin placecolor($color: black) {
  &::-webkit-input-placeholder {
    color: $color;
  }

  &:-moz-placeholder {
    color: $color;
  }

  &::-moz-placeholder {
    color: $color;
  }

  &:-ms-input-placeholder {
    color: $color;
  }
}
@mixin breakpoint($width) {
   @media only screen and (max-width: ($width) + px){
    @content;
  }
}
